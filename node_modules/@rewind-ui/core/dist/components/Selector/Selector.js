'use client';
import{__rest}from"tslib";import{jsx,jsxs}from"react/jsx-runtime";import{SelectorTab}from"./SelectorTab/SelectorTab.js";import{useMergeRefs}from"@floating-ui/react";import{useHorizontalArrows}from"../../hooks/use-horizontal-arrows.hook.js";import{useComponentTheme}from"../../theme/theme.context.js";import{usePropId}from"../../utils/usePropId.js";import{forwardRef,useRef,useState,useMemo,useEffect,Children}from"react";import{twMerge}from"tailwind-merge";import{SelectorContextProvider}from"./Selector.context.js";const defaultProps={color:"dark",fullWidth:!1,orientation:"horizontal",radius:"lg",shadow:"base",size:"md",tone:"solid",withAnimation:!0,withSeparator:!0},_Selector=forwardRef(((e,r)=>{const t=useComponentTheme("Selector"),o=Object.assign(Object.assign({},defaultProps),e),{children:s,className:i="",color:a,fullWidth:n,onChange:l,orientation:c,radius:u,separator:d,shadow:p,size:f,tone:h,value:m,withAnimation:w,withSeparator:S}=o,g=__rest(o,["children","className","color","fullWidth","onChange","orientation","radius","separator","shadow","size","tone","value","withAnimation","withSeparator"]),b=usePropId(e.id),j=useRef(null),v=useMergeRefs([r||null,j]),[x,z]=useState(m),R=useRef(!0),P=useRef(null),y=useRef(null),[T,A]=useState(""),C=new Map,M=useMemo((()=>twMerge(t.wrapper({className:i,fullWidth:n,orientation:c,radius:u,shadow:p,size:f}))),[i,n,c,u,p,f,t]),_=(e,r,o,s="md",i="horizontal",a=!0)=>{const n=e.getBoundingClientRect(),l=n.width,c=n.height;r.style.setProperty("width",`${l}px`),r.style.setProperty("height",`${c}px`),r.style.setProperty("top",`${e.offsetTop}px`),r.style.setProperty("left",`${e.offsetLeft}px`),A(t.base({color:C.get(o),size:s,radius:u,tone:h,initialRun:a,withAnimation:w}))};useEffect((()=>{var e;if(!x)return;const r=null===(e=j.current)||void 0===e?void 0:e.querySelector('button[aria-checked="true"]');return r&&P.current?(_(r,P.current,x,f,c,R.current),R.current=!1,y.current=new ResizeObserver((e=>{P.current&&_(r,P.current,x,f,c,R.current)})),y.current.observe(P.current),()=>{y.current&&y.current.disconnect()}):void 0}),[x,a,n,c,u,f,h,w,S]),useEffect((()=>{l&&!R.current&&l(x)}),[x]);const N={activeTabAnchor:x,color:a,orientation:c,radius:u,separator:d,setActiveTabAnchor:z,shadow:p,size:f,tone:h,withSeparator:S};return Children.map(s,(e=>{C.set(e.props.anchor,e.props.color||a)})),useHorizontalArrows(j),jsx(SelectorContextProvider,Object.assign({value:N},{children:jsxs("div",Object.assign({id:b,ref:v,role:"radiogroup",className:M},g,{children:[s,jsx("div",{ref:P,className:T})]}))}))}));_Selector.displayName="Selector";const Selector=Object.assign(_Selector,{Tab:SelectorTab});export{Selector as default};
