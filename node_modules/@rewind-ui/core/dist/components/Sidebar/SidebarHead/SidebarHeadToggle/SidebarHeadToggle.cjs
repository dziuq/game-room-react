'use client';
"use strict";var tslib=require("tslib"),jsxRuntime=require("react/jsx-runtime"),Sidebar_context=require("../../Sidebar.context.cjs"),Sidebar_types=require("../../Sidebar.types.cjs"),LeftToLine=require("../../../../icons/LeftToLine.cjs"),theme_context=require("../../../../theme/theme.context.cjs"),usePropId=require("../../../../utils/usePropId.cjs"),React=require("react"),tailwindMerge=require("tailwind-merge");const SidebarHeadToggle=React.forwardRef(((e,t)=>{const a=theme_context.useComponentTheme("Sidebar"),{className:r,onClick:i}=e,s=tslib.__rest(e,["className","onClick"]),{color:d,state:o,dispatch:n}=Sidebar_context.useSidebarContext(),c=React.useMemo((()=>tailwindMerge.twMerge(a.headToggle({className:r,color:d}))),[r,d,a]),l=usePropId.usePropId(e.id);return jsxRuntime.jsx("button",Object.assign({id:l,ref:t,type:"button",title:o.expanded?"Collapse":"Expand","aria-pressed":o.expanded,"aria-expanded":o.expanded,"data-role":"sidebar-head-toggle",className:c,onClick:e=>{n({type:Sidebar_types.sidebarActionEnum.toggle}),i&&i(e)}},s,{children:jsxRuntime.jsx(LeftToLine.LeftToLineIcon,{className:a.headToggleIcon({expanded:o.expanded})})}))}));SidebarHeadToggle.displayName="SidebarHeadToggle",exports.SidebarHeadToggle=SidebarHeadToggle;
