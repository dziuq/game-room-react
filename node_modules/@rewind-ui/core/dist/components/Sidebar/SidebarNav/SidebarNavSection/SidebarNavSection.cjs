'use client';
"use strict";var tslib=require("tslib"),jsxRuntime=require("react/jsx-runtime"),Sidebar_context=require("../../Sidebar.context.cjs"),SidebarNavSectionItem=require("./SidebarNavSectionItem/SidebarNavSectionItem.cjs"),SidebarNavSectionTitle=require("./SidebarNavSectionTitle/SidebarNavSectionTitle.cjs"),theme_context=require("../../../../theme/theme.context.cjs"),usePropId=require("../../../../utils/usePropId.cjs"),React=require("react"),tailwindMerge=require("tailwind-merge");const SidebarNavSectionRoot=React.forwardRef(((e,i)=>{const t=theme_context.useComponentTheme("Sidebar"),{children:r,className:a,isChild:c=!1}=e,o=tslib.__rest(e,["children","className","isChild"]),{color:n}=Sidebar_context.useSidebarContext(),s=React.useMemo((()=>tailwindMerge.twMerge(t.navSection({className:a,color:n,isChild:c}))),[a,n,c,t]),S=usePropId.usePropId(e.id);return jsxRuntime.jsx("ul",Object.assign({id:S,className:s,ref:i},o,{children:r}))}));SidebarNavSectionRoot.displayName="SidebarNavSection";const SidebarNavSection=Object.assign(SidebarNavSectionRoot,{Title:SidebarNavSectionTitle.SidebarNavSectionTitle,Item:SidebarNavSectionItem.SidebarNavSectionItem});exports.SidebarNavSection=SidebarNavSection;
