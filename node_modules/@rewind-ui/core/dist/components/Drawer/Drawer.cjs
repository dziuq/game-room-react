'use client';
"use strict";var tslib=require("tslib"),jsxRuntime=require("react/jsx-runtime"),react=require("@floating-ui/react"),useFocusTrap_hook=require("../../hooks/use-focus-trap.hook.cjs"),useKeypress=require("../../hooks/use-keypress.cjs"),theme_context=require("../../theme/theme.context.cjs"),usePropId=require("../../utils/usePropId.cjs"),React=require("react"),Overlay=require("../Overlay/Overlay.cjs"),tailwindMerge=require("tailwind-merge");const defaultProps={closeOnEscape:!0,color:"white",open:!1,overlayBlur:"sm",overlayCloseOnClick:!0,overlayColor:"dark",overlayOpacity:"50",position:"right",shadow:"base"},Drawer=React.forwardRef(((e,r)=>{const s=theme_context.useComponentTheme("Drawer"),t=Object.assign(Object.assign({},defaultProps),e),{children:a,className:o="",closeOnEscape:i,onClose:l,open:n,overlayBlur:c,overlayCloseOnClick:u,overlayColor:p,overlayOpacity:d,position:y,shadow:m}=t,h=tslib.__rest(t,["children","className","closeOnEscape","onClose","open","overlayBlur","overlayCloseOnClick","overlayColor","overlayOpacity","position","shadow"]),f=usePropId.usePropId(e.id),v=React.useRef(null),[j,R]=React.useState(!1),w=useFocusTrap_hook.useFocusTrap(j),O=react.useMergeRefs([v,w||null,r||null]),g=React.useRef(null),x=React.useMemo((()=>tailwindMerge.twMerge(s({className:o,position:y,shadow:m}))),[o,y,m,s]);useKeypress.useKeypress("Escape",i,l);const b=React.useMemo((()=>{switch(y){case"left":default:return["translateX(-100%)","translateX(0%)"];case"right":return["translateX(100%)","translateX(0%)"];case"top":return["translateY(-100%)","translateY(0%)"];case"bottom":return["translateY(100%)","translateY(0%)"]}}),[y]);return React.useEffect((()=>{const e=n?150:100,r=new KeyframeEffect(v.current,[{opacity:.75,transform:b[0],visibility:"hidden"},{opacity:1,visibility:"visible",transform:b[1]}],{duration:e,fill:"both",easing:"ease-in-out"});g.current=new Animation(r,document.timeline)}),[n,v]),React.useEffect((()=>{g.current&&(n?(g.current.play(),g.current.onfinish=()=>{R(!0)}):(g.current.reverse(),R(!1)))}),[n]),jsxRuntime.jsxs(jsxRuntime.Fragment,{children:[jsxRuntime.jsx(Overlay,{open:n,onClick:()=>{u&&l&&l()},blur:c,color:p,opacity:d,closeOnClick:u}),jsxRuntime.jsx(react.FloatingPortal,{children:jsxRuntime.jsx("div",Object.assign({id:f,role:"dialog","aria-hidden":!n,style:{opacity:0,visibility:"hidden"},ref:O,className:x},h,{children:a}))})]})}));Drawer.displayName="Drawer",module.exports=Drawer;
