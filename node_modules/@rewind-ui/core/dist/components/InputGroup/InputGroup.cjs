'use client';
"use strict";var tslib=require("tslib"),jsxRuntime=require("react/jsx-runtime"),Button=require("../Button/Button.cjs"),Combobox=require("../Combobox/Combobox.cjs"),FormControl_context=require("../FormControl/FormControl.context.cjs"),Input=require("../Input/Input.cjs"),InputGroupText=require("./InputGroupText/InputGroupText.cjs"),Select=require("../Select/Select.cjs"),Textarea=require("../Textarea/Textarea.cjs"),theme_context=require("../../theme/theme.context.cjs"),usePropId=require("../../utils/usePropId.cjs"),React=require("react"),tailwindMerge=require("tailwind-merge"),InputGroup_context=require("./InputGroup.context.cjs");const defaultProps={radius:"lg",shadow:"none",size:"md",tone:"light"},_InputGroup=React.forwardRef(((e,t)=>{const r=theme_context.useComponentTheme("InputGroup"),o=Object.assign(Object.assign(Object.assign({},FormControl_context.useFormControlContext()),defaultProps),e),{className:n="",controlId:u,radius:s,shadow:a,size:i,tone:c}=o,p=tslib.__rest(o,["className","controlId","radius","shadow","size","tone"]),l=usePropId.usePropId(e.id),d=React.useMemo((()=>tailwindMerge.twMerge(r.base({className:n,radius:s,shadow:a,size:i}))),[n,s,a,i,r]),x={tone:c,size:i,radius:s},m=[];return React.Children.toArray(e.children).forEach(((t,r)=>{m.push(React.cloneElement(t,Object.assign(Object.assign({},t.props),{"data-has-right-element":r<React.Children.count(e.children)-1,"data-has-left-element":r>0})))})),jsxRuntime.jsx(InputGroup_context.InputGroupContextProvider,Object.assign({value:x},{children:jsxRuntime.jsx("div",Object.assign({id:l,ref:t,className:d},p,{children:m}))}))}));_InputGroup.displayName="InputGroup";const InputGroup=Object.assign(_InputGroup,{Input:Input,Textarea:Textarea,Select:Select,Combobox:Combobox,Text:InputGroupText.InputGroupText,Button:Button});module.exports=InputGroup;
