import{__rest}from"tslib";import{jsx,jsxs}from"react/jsx-runtime";import{usePopoverContext}from"../Popover.context.js";import{FloatingPortal}from"@floating-ui/react";import{arrowSideDictionary}from"../../../helpers/arrow-side.dictionary.js";import{useComponentTheme}from"../../../theme/theme.context.js";import{forwardRef,useState,useEffect,useMemo}from"react";import{twMerge}from"tailwind-merge";const PopoverContent=forwardRef(((e,o)=>{var t,r;const i=useComponentTheme("Popover"),a=Object.assign({},e),{children:s,className:n=""}=a,l=__rest(a,["children","className"]),{controlsId:d,labelledbyId:m,arrowRef:c,color:p,context:f,floating:u,getFloatingProps:w,open:x,radius:g,shadow:v,size:h,strategy:j,withinPortal:b,x:y,y:P}=usePopoverContext(),[N,C]=useState(!x),[S,O]=useState(null);useEffect((()=>{S&&clearTimeout(S),O(setTimeout((()=>C(!x)),x?0:75))}),[x]);const F=(null===(t=f.middlewareData.arrow)||void 0===t?void 0:t.x)||0,D=(null===(r=f.middlewareData.arrow)||void 0===r?void 0:r.y)||0,M=arrowSideDictionary({side:f.placement}),T=useMemo((()=>twMerge(i.base({arrowSide:M,className:n,color:p,open:x,radius:g,shadow:v,size:h}))),[M,n,p,x,g,v,h,i]),_=jsx("span",{ref:c,className:i.arrow({arrowSide:M,color:p}),style:Object.assign(Object.assign(Object.assign({},"right"!==M&&{left:`${F}px`}),"top"!==M&&{bottom:`${D}px`}),{[M]:"-5px"})}),R=!N&&jsxs("div",Object.assign({id:d,ref:u,className:T,style:{position:j,top:P&&P>0&&!isNaN(P)&&isFinite(P)?P:0,left:y&&y>0&&!isNaN(y)&&isFinite(y)?y:0,visibility:null==y?"hidden":"visible"}},w,l,{children:[_,s]}));return jsx("div",Object.assign({ref:o,className:n,role:"dialog","aria-modal":!0,"aria-expanded":x,"aria-labelledby":m,"aria-hidden":!x},{children:b?jsx(FloatingPortal,{children:R}):R}))}));PopoverContent.displayName="PopoverContent";export{PopoverContent};
