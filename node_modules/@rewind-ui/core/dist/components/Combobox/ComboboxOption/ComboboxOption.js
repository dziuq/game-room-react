import{jsxs,jsx}from"react/jsx-runtime";import{useComboboxContext}from"../Combobox.context.js";import{ComboboxActionEnum}from"../Combobox.types.js";import{textNormalize}from"../../../helpers/text-normalize.utility.js";import{CheckIcon}from"../../../icons/Check.js";import{useComponentTheme}from"../../../theme/theme.context.js";import{usePropId}from"../../../utils/usePropId.js";import{forwardRef,useEffect}from"react";const ComboboxOption=forwardRef(((e,o)=>{const t=useComponentTheme("ComboboxOption"),{value:i,label:s,description:a,media:l}=e,n=!!e.disabled,r=usePropId(e.id),{dispatch:m,externalSearch:c,mode:d,multiple:p,optionColor:b,radius:u,size:x,state:C}=useComboboxContext(),f=textNormalize(C.search||""),h=textNormalize(s||""),j=textNormalize(a||""),y=!c&&!h.includes(f)&&!j.includes(f),g=-1!==C.selectedOptions.findIndex((e=>e.value===i));useEffect((()=>{m({type:ComboboxActionEnum.register,payload:{value:i,label:s}}),C.initialValue&&("string"!=typeof C.initialValue||C.initialValue!==i?Array.isArray(C.initialValue)&&C.initialValue.includes(i)&&m({type:ComboboxActionEnum.multi_select,payload:{value:i,omitOnChange:!0}}):m({type:ComboboxActionEnum.single_select,payload:{value:i,omitOnChange:!0}}))}),[]);return jsxs("button",Object.assign({id:r,ref:o,"aria-selected":g,role:"option",className:t.button({optionColor:b,radius:u,selected:g,hidden:y,size:x,mode:d}),"aria-hidden":y,disabled:n,"aria-disabled":n,onClick:()=>{m(p?{type:ComboboxActionEnum.multi_select,payload:{value:i,toggle:!0}}:{type:ComboboxActionEnum.single_select,payload:{value:i,toggle:!0}})}},{children:[jsxs("div",Object.assign({className:t.optionWrapper()},{children:[l,jsxs("div",Object.assign({className:t.infoWrapper()},{children:[jsx("span",Object.assign({className:t.label({disabled:n,selected:g})},{children:s})),jsx("span",Object.assign({className:t.description({disabled:n,selected:g})},{children:a}))]}))]})),g&&jsx(CheckIcon,{className:t.icon({size:x})})]}))}));ComboboxOption.displayName="ComboboxOption";export{ComboboxOption};
