import{__rest}from"tslib";import{jsxs,Fragment,jsx}from"react/jsx-runtime";import{useComboboxContext}from"../Combobox.context.js";import{useMergeRefs}from"@floating-ui/react";import{useComponentTheme}from"../../../theme/theme.context.js";import{usePropId}from"../../../utils/usePropId.js";import{forwardRef,useRef,useState,useEffect,Children,cloneElement}from"react";const defaultProps={weight:"normal"},ComboboxGroup=forwardRef(((e,o)=>{const t=useComponentTheme("Combobox"),s=Object.assign(Object.assign({},defaultProps),e),{children:r,className:i,heading:m,weight:n}=s,a=__rest(s,["children","className","heading","weight"]),u=usePropId(e.id),l=useRef(null),d=useMergeRefs([l,o||null]),[c,f]=useState(!1),{size:p,state:b,mode:h}=useComboboxContext(),[g,x]=useState(null),[C,j]=useState(""),[w,E]=useState(0);return useEffect((()=>{E(0),x(Children.map(r,(e=>cloneElement(e,Object.assign(Object.assign({},e.props),{ref:e=>{e&&"true"===(null==e?void 0:e.getAttribute("aria-hidden"))&&E((e=>e+1))}})))))}),[b.search]),useEffect((()=>{f(w===Children.count(r))}),[r,w]),useEffect((()=>{j(t.group({className:i,hidden:c,size:p,mode:h,weight:n}))}),[i,c,h,p,t,n]),jsxs(Fragment,{children:[jsx("div",Object.assign({id:u,ref:d,"aria-hidden":c,className:C},a,{children:m})),g]})}));ComboboxGroup.displayName="ComboboxGroup";export{ComboboxGroup};
