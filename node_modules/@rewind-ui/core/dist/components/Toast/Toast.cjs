'use client';
"use strict";var tslib=require("tslib"),jsxRuntime=require("react/jsx-runtime"),useToast_hook=require("./use-toast.hook.cjs"),Error=require("../../icons/Error.cjs"),Info=require("../../icons/Info.cjs"),Question=require("../../icons/Question.cjs"),Success=require("../../icons/Success.cjs"),Warning=require("../../icons/Warning.cjs"),theme_context=require("../../theme/theme.context.cjs"),variant_context=require("../../theme/variant.context.cjs"),usePropId=require("../../utils/usePropId.cjs"),React=require("react"),tailwindMerge=require("tailwind-merge");const defaultProps={closeOnClick:!0,color:"blue",pauseOnHover:!0,radius:"lg",shadow:"base",shadowColor:"gray",showProgress:!0,tone:"solid"},icons={error:jsxRuntime.jsx(Error.ErrorIcon,{}),info:jsxRuntime.jsx(Info.InfoIcon,{}),question:jsxRuntime.jsx(Question.QuestionIcon,{}),success:jsxRuntime.jsx(Success.SuccessIcon,{}),warning:jsxRuntime.jsx(Warning.WarningIcon,{})},Toast=React.forwardRef(((e,s)=>{const r=variant_context.useComponentVariant("Toast",e.variant),t=theme_context.useComponentTheme("Toast"),n=Object.assign(Object.assign(Object.assign({},defaultProps),r),e),{actions:o=[],className:i="",closeOnClick:a,color:c,description:u="",duration:l=3e3,halted:m=!1,iconType:j,pauseOnHover:d,radius:x,shadow:h,shadowColor:g,showProgress:p,title:R="",tone:v,variant:b}=n,w=tslib.__rest(n,["actions","className","closeOnClick","color","description","duration","halted","iconType","pauseOnHover","radius","shadow","shadowColor","showProgress","title","tone","variant"]),[O,f]=React.useState(m),[q,I]=React.useState(m?1e3:0),C=useToast_hook.useToast(),N=usePropId.usePropId(e.id),T=React.useRef(null),k=React.useRef(null),P=!!R,_=React.useMemo((()=>tailwindMerge.twMerge(t.toast({className:i,color:c,tone:v,radius:x,shadow:h,shadowColor:g}))),[i,c,v,x,h,g,t]),y=e=>{k.current||(k.current=e);e-(k.current||0)>=50&&(I((e=>e+50)),k.current=e),T.current=requestAnimationFrame(y)};return React.useEffect((()=>{if(O||(T.current=requestAnimationFrame(y)),d)return()=>{T.current&&cancelAnimationFrame(T.current),k.current&&cancelAnimationFrame(k.current)}}),[O]),React.useEffect((()=>{l&&q>=l&&C.remove(N)}),[q]),jsxRuntime.jsxs("div",Object.assign({id:N,ref:s,role:"alert","aria-live":"assertive",onMouseEnter:()=>f(!0),onMouseLeave:()=>f(!1),className:_},w,{children:[l>0&&p&&jsxRuntime.jsx("div",Object.assign({className:t.progress({color:c,tone:v})},{children:jsxRuntime.jsx("div",{className:t.progressInner({color:c,tone:v}),style:{width:100*q/l+"%",transitionDuration:"50ms"}})})),jsxRuntime.jsxs("div",Object.assign({className:t.contentWrapper({closeOnClick:a}),onClick:()=>{a&&C.remove(N)}},{children:[j&&icons[j],jsxRuntime.jsxs("div",Object.assign({className:t.content()},{children:[R&&jsxRuntime.jsx("h4",Object.assign({className:t.title()},{children:R})),u&&jsxRuntime.jsx("p",Object.assign({className:t.description({hasTitle:P})},{children:u}))]}))]})),o.length>0&&jsxRuntime.jsx("div",Object.assign({className:t.actionsWrapper({tone:v,color:c})},{children:o.map(((e,s)=>jsxRuntime.jsx("button",Object.assign({className:t.action({primary:e.primary,tone:v,color:c}),onClick:e.onClick},{children:e.label}),`action-${N}-${s}`)))}))]}))}));Toast.displayName="Toast",module.exports=Toast;
