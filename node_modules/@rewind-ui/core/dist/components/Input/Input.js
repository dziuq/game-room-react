'use client';
import{__rest}from"tslib";import{jsx,jsxs}from"react/jsx-runtime";import{useFormControlContext}from"../FormControl/FormControl.context.js";import{useInputGroupContext}from"../InputGroup/InputGroup.context.js";import{usePropId}from"../../utils/usePropId.js";import{forwardRef,useMemo,cloneElement}from"react";import{twMerge}from"tailwind-merge";import Spinner from"../Spinner/Spinner.js";import{useComponentTheme}from"../../theme/theme.context.js";const defaultProps={color:"dark",disabled:!1,loading:!1,radius:"lg",shadow:"none",size:"md",tone:"light",validation:"none",withRing:!0},Input=forwardRef(((e,s)=>{const o=useComponentTheme("Input"),t=Object.assign(Object.assign(Object.assign(Object.assign({},defaultProps),useFormControlContext()),useInputGroupContext()),e),{className:n="",color:r,controlId:a,leftIcon:i,loading:l,radius:c,rightIcon:p,shadow:m,size:d,tone:u,type:g="text",validation:h,withRing:j}=t,I=__rest(t,["className","color","controlId","leftIcon","loading","radius","rightIcon","shadow","size","tone","type","validation","withRing"]),f=usePropId(e.id),x=a||f,b=!!i,N=!!p,w=e.disabled||l,z=useMemo((()=>twMerge(o.base({className:n,color:r,disabled:w,hasLeftIcon:b,hasRightIcon:N,loading:l,radius:c,shadow:m,size:d,tone:u,type:g,validation:h,withRing:j}))),[n,r,w,b,N,l,c,m,d,o,u,g,h,j]),C=jsx("input",Object.assign({id:x,type:g,ref:s,className:z},I,{disabled:w}));return b||N||l?jsxs("div",Object.assign({className:o.wrapper()},{children:[i&&jsx("span",Object.assign({className:o.leftIconWrapper({size:d})},{children:cloneElement(i,{className:o.icon({tone:u,size:d,className:i.props.className})})})),C,p&&!l&&jsx("span",Object.assign({className:o.rightIconWrapper({size:d})},{children:cloneElement(p,{className:o.icon({tone:u,size:d,className:p.props.className})})})),l&&jsx("span",Object.assign({className:o.rightIconWrapper({size:d})},{children:jsx(Spinner,{size:d,color:"gray"})}))]})):C}));Input.displayName="Input";export{Input as default};
