'use client';
import{jsxs,jsx,Fragment}from"react/jsx-runtime";import{useTooltip}from"./use-tooltip.hook.js";import{useMergeRefs,FloatingArrow,FloatingPortal}from"@floating-ui/react";import{useComponentTheme}from"../../theme/theme.context.js";import{usePropId}from"../../utils/usePropId.js";import{forwardRef,useState,useEffect,Children,useMemo,cloneElement}from"react";import{twMerge}from"tailwind-merge";const defaultProps={color:"dark",initiallyOpen:!1,offset:6,placement:"top",radius:"lg",shadow:"none",size:"sm",tone:"solid",withinPortal:!0},Tooltip=forwardRef(((e,o)=>{const t=useComponentTheme("Tooltip"),{tone:i,children:s,className:r="",color:l,initiallyOpen:a,label:n,offset:m,placement:p,radius:c,shadow:d,size:f,withinPortal:u}=Object.assign(Object.assign({},defaultProps),e),g=usePropId(e.id),[h,w]=useState(!a),[j,x]=useState(null),{arrowRef:P,arrowSide:T,context:y,floating:b,getFloatingProps:F,getReferenceProps:N,open:O,reference:M,strategy:R,x:S,y:C}=useTooltip({initiallyOpen:a,offset:m,placement:p});useEffect((()=>{j&&clearTimeout(j),x(setTimeout((()=>w(!O)),O?0:75))}),[O]);const E=Children.only(s),v=useMergeRefs([b,o||null]),z=useMemo((()=>twMerge(t.base({tone:i,arrowSide:T,className:r,color:l,open:O,radius:c,shadow:d,size:f}))),[i,T,r,l,O,c,d,f,t]),I=!h&&jsxs("div",Object.assign({id:g,ref:v,className:z,role:"dialog","aria-modal":"true","aria-hidden":!O,style:{position:R,top:C&&C>0&&!isNaN(C)&&isFinite(C)?C:0,left:S&&S>0&&!isNaN(S)&&isFinite(S)?S:0,visibility:null==S?"hidden":"visible"}},{children:[y.x&&y.y&&jsx(FloatingArrow,{className:t.arrow({tone:i,color:l}),ref:P,width:8,height:4,context:y}),n]})),k=cloneElement(E,Object.assign(Object.assign({ref:M},E.props),N));return jsxs(Fragment,{children:[u?jsx(FloatingPortal,{children:I}):I,k]})}));Tooltip.displayName="Tooltip";export{Tooltip as default};
