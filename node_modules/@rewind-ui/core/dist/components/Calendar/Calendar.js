'use client';
import{__rest}from"tslib";import{jsxs,jsx,Fragment}from"react/jsx-runtime";import{useComponentTheme}from"../../theme/theme.context.js";import{usePropId}from"../../utils/usePropId.js";import{forwardRef,useState,useEffect}from"react";import enGB from"../../node_modules/date-fns/esm/locale/en-GB/index.js";import{AngleLeft}from"../../icons/AngleLeft.js";import{AngleRight}from"../../icons/AngleRight.js";import{useWeek}from"./use-week.hook.js";import{useMonths}from"./use-months.hook.js";import{useYears}from"./use-years.hook.js";import isValid from"../../node_modules/date-fns/esm/isValid/index.js";import isBefore from"../../node_modules/date-fns/esm/isBefore/index.js";import startOfMonth from"../../node_modules/date-fns/esm/startOfMonth/index.js";import subYears from"../../node_modules/date-fns/esm/subYears/index.js";import subMonths from"../../node_modules/date-fns/esm/subMonths/index.js";import format from"../../node_modules/date-fns/esm/format/index.js";import isAfter from"../../node_modules/date-fns/esm/isAfter/index.js";import endOfMonth from"../../node_modules/date-fns/esm/endOfMonth/index.js";import addYears from"../../node_modules/date-fns/esm/addYears/index.js";import addMonths from"../../node_modules/date-fns/esm/addMonths/index.js";import isToday from"../../node_modules/date-fns/esm/isToday/index.js";import isSameDay from"../../node_modules/date-fns/esm/isSameDay/index.js";import isSameMonth from"../../node_modules/date-fns/esm/isSameMonth/index.js";import{motion}from"../../node_modules/framer-motion/dist/es/render/dom/motion.js";const defaultProps={bordered:!0,borderStyle:"solid",dayFormat:"EEEEE",disabledWeekends:!0,horizontalBorders:!0,radius:"md",shadow:"sm",size:"md",verticalBorders:!0},Calendar=forwardRef(((e,s)=>{const a=useComponentTheme("Calendar"),[t,o]=useState("calendar"),r=Object.assign(Object.assign({},defaultProps),e),{bordered:d,borderStyle:n,children:i,className:l="",value:m,dayFormat:c,blueDates:u=[],redDates:f=[],greenDates:h=[],yellowDates:b=[],purpleDates:j=[],disabledDates:y=[],disabledWeekends:p,horizontalBorders:x,locale:g=enGB,maxDate:v,minDate:D,radius:O,shadow:w,size:S,verticalBorders:N,onChange:k}=r,M=__rest(r,["bordered","borderStyle","children","className","value","dayFormat","blueDates","redDates","greenDates","yellowDates","purpleDates","disabledDates","disabledWeekends","horizontalBorders","locale","maxDate","minDate","radius","shadow","size","verticalBorders","onChange"]),[C,_]=useState(m),[B,L]=useState(m||new Date),z=usePropId(e.id);useEffect((()=>{if(m&&isValid(m))return _(m),void L(m);_(null)}),[m]),useEffect((()=>{k&&k(C)}),[C]);const{weekRows:A,weekdays:R}=useWeek({month:B,disabledWeekends:p,disabledDates:y,minDate:D,maxDate:v,blueDates:u,redDates:f,greenDates:h,yellowDates:b,purpleDates:j}),T=useMonths(B),$=useYears(B),E=jsxs("div",Object.assign({className:a.nav()},{children:[jsx("button",Object.assign({"aria-label":"year"===t?"Previous 12 years":"Previous month",type:"button",className:a.navButton({radius:O,size:S,bordered:d,borderStyle:n,shadow:w}),disabled:D&&isBefore(startOfMonth(B),D),onClick:()=>{L("year"===t?subYears(B,12):subMonths(B,1))}},{children:jsx(AngleLeft,{})})),jsxs("div",Object.assign({className:a.navMonth()},{children:[jsx("button",Object.assign({type:"button","aria-label":"Select month",onClick:()=>o("month"===t?"calendar":"month")},{children:jsx("time",Object.assign({dateTime:format(B,"LLLL")},{children:format(B,"LLLL",{locale:g})}))})),jsx("button",Object.assign({type:"button","aria-label":"Select year",onClick:()=>o("year"===t?"calendar":"year")},{children:jsx("time",Object.assign({dateTime:format(B,"yyyy")},{children:format(B,"yyyy",{locale:g})}))}))]})),jsx("button",Object.assign({"aria-label":"year"===t?"Next 12 years":"Next month",type:"button",className:a.navButton({radius:O,size:S,bordered:d,borderStyle:n,shadow:w}),disabled:v&&isAfter(endOfMonth(B),v),onClick:()=>{L("year"===t?addYears(B,12):addMonths(B,1))}},{children:jsx(AngleRight,{})}))]})),Y=jsx("div",Object.assign({className:a.head()},{children:R.map(((e,s)=>jsx("div",Object.assign({className:a.weekDay()},{children:format(e,c,{locale:g})}),`weekday-${s}`)))})),F=jsx(Fragment,{children:T.map(((e,s)=>jsx("div",Object.assign({className:a.calendarRow({borderStyle:n,verticalBorders:N})},{children:e.map(((e,s)=>jsx("button",Object.assign({onClick:()=>{L(e),o("year")},className:a.calendarCell({color:"white",size:S})},{children:format(e,"LLLL",{locale:g})}),`month-${s}`)))}),`month-row-${s}`)))}),P=jsx(Fragment,{children:$.map(((e,s)=>jsx("div",Object.assign({className:a.calendarRow({borderStyle:n,verticalBorders:N})},{children:e.map(((e,s)=>jsx("button",Object.assign({onClick:()=>{L(e),o("calendar")},className:a.calendarCell({color:"white",size:S})},{children:format(e,"yyyy",{locale:g})}),`year-${s}`)))}),`year-row-${s}`)))}),W=jsx(Fragment,{children:A.map(((e,s)=>jsx("div",Object.assign({className:a.calendarRow({borderStyle:n,verticalBorders:N})},{children:e.map(((e,s)=>jsxs("button",Object.assign({onClick:()=>{e.disabled||(_(e.value),L(startOfMonth(e.value)))},disabled:e.disabled,className:a.calendarCell({isToday:isToday(e.value),isSameDay:C&&isValid(C)&&isSameDay(e.value,C),isSameMonth:isSameMonth(e.value,B),color:e.color,size:S})},{children:[C&&isValid(C)&&isSameDay(e.value,C)&&jsx(motion.div,{layoutId:`${z}-day-thumb`,className:a.thumb({size:S}),transition:{duration:.25,type:"spring"}}),jsxs("time",Object.assign({className:a.dayLabel(),dateTime:format(e.value,"MM/dd/yyyy")},{children:[" ",e.value.getDate()]}))]}),`day-${e.value.getDate()}-${s}`)))}),`week-${s}`)))});return jsxs("div",Object.assign({id:z,ref:s,className:a.base({className:l,size:S})},M,{children:[E,"calendar"===t&&Y,jsxs("div",Object.assign({className:a.calendar({bordered:d,borderStyle:n,className:l,radius:O,shadow:w,horizontalBorders:x})},{children:["calendar"===t&&W,"month"===t&&F,"year"===t&&P]}))]}))}));Calendar.displayName="Calendar";export{Calendar as default};
