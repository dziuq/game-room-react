'use client';
"use strict";var tslib=require("tslib"),jsxRuntime=require("react/jsx-runtime"),theme_context=require("../../theme/theme.context.cjs"),usePropId=require("../../utils/usePropId.cjs"),React=require("react"),tailwindMerge=require("tailwind-merge");const defaultProps={color:"dark",radius:"full",size:"md",withRing:!0},Switch=React.forwardRef(((e,s)=>{const t=theme_context.useComponentTheme("Switch"),a=Object.assign(Object.assign({},defaultProps),e),{className:i="",checked:r=!1,color:l,disabled:n,onChange:c,radius:d,size:o,withRing:u,label:m,labelClassName:h="",description:f,descriptionClassName:g="",error:j,errorClassName:b=""}=a,x=tslib.__rest(a,["className","checked","color","disabled","onChange","radius","size","withRing","label","labelClassName","description","descriptionClassName","error","errorClassName"]),R=usePropId.usePropId(e.id),[w,p]=React.useState(r),N=React.useRef(null),y=React.useRef(!0),C=w?"active":"inactive",M=React.useMemo((()=>tailwindMerge.twMerge(t.base({className:i,color:l,radius:d,size:o,state:C,withRing:u}))),[t,l,o,d,C,u,i]);return React.useEffect((()=>{const e=N.current;if(!e)return;if(y.current)return e.style.justifySelf=w?"end":"start",e.style.transform="",void(y.current=!1);const s=e.getAnimations();s.length>0&&s.forEach((e=>{e.cancel()}));const t=e.parentElement;if(!t)return;const a=t.scrollWidth-e.offsetWidth-(t.scrollHeight-e.offsetHeight),i=w?"translateX(0)":`translateX(${a}px)`,r=w?`translateX(${a}px)`:"translateX(0)";e.style.justifySelf="";e.animate({transform:[i,r]},{duration:50}).onfinish=()=>{e.style.transform="",e.style.justifySelf=w?"end":"start"}}),[w]),React.useEffect((()=>{c&&!y.current&&c(w)}),[w]),jsxRuntime.jsxs("div",Object.assign({onClick:()=>{n||p(!w)},className:"flex items-center"},{children:[jsxRuntime.jsx("button",Object.assign({ref:s,className:M,role:"switch","aria-checked":w,"aria-labelledby":`${R}-label`,disabled:n},x,{children:jsxRuntime.jsx("span",{ref:N,className:t.inner({radius:d,size:o,state:C})})})),jsxRuntime.jsxs("div",Object.assign({className:"grid grid-cols-1 justify-items-start"},{children:[jsxRuntime.jsx("label",Object.assign({id:`${R}-label`,htmlFor:R,className:tailwindMerge.twMerge(t.label({disabled:n,size:o,className:h}))},{children:m})),f&&jsxRuntime.jsx("span",Object.assign({className:tailwindMerge.twMerge(t.description({disabled:n,size:o,className:g}))},{children:f})),j&&jsxRuntime.jsx("span",Object.assign({className:tailwindMerge.twMerge(t.error({disabled:n,size:o,className:b}))},{children:j}))]}))]}))}));Switch.displayName="Switch",module.exports=Switch;
