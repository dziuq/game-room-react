'use client';
import{__rest}from"tslib";import{jsxs,jsx}from"react/jsx-runtime";import{useDropdownContext}from"../Dropdown/Dropdown.context.js";import{useInputGroupContext}from"../InputGroup/InputGroup.context.js";import Spinner from"../Spinner/Spinner.js";import{ChevronDownIcon}from"../../icons/ChevronDown.js";import{useComponentTheme}from"../../theme/theme.context.js";import{useComponentVariant}from"../../theme/variant.context.js";import{usePropId}from"../../utils/usePropId.js";import{forwardRef,useMemo}from"react";import{twMerge}from"tailwind-merge";const defaultProps={animation:"none",color:"dark",disabled:!1,icon:!1,loading:!1,radius:"lg",shadow:"none",shadowColor:"none",size:"md",tone:"solid",withRing:!0},Button=forwardRef(((o,n)=>{const e=useComponentVariant("Button",o.variant),t=useComponentTheme("Button"),s=Object.assign(Object.assign(Object.assign(Object.assign({},defaultProps),useInputGroupContext()),e),o),{animation:i,as:r,children:a,className:d="",color:m,disabled:p,icon:u,loading:c,radius:l,shadow:h,shadowColor:w,size:f,tone:j,variant:g,withRing:b}=s,C=__rest(s,["animation","as","children","className","color","disabled","icon","loading","radius","shadow","shadowColor","size","tone","variant","withRing"]),{open:x,withChevron:v,chevronRotation:I}=Object.assign({},useDropdownContext()),R=useMemo((()=>twMerge(t.base({animation:i,className:d,color:m,disabled:p,icon:u,loading:c,radius:l,shadow:h,shadowColor:w,size:f,tone:j,withRing:b}))),[i,d,m,p,u,c,l,h,w,f,t,j,b]),D=v?t.chevron({open:x,size:f,chevronRotation:I}):"",N=c?t.spinner({size:f}):"",z=r||"button",B=usePropId(o.id),O=o.type||"button"===z?"button":void 0;return jsxs(z,Object.assign({id:B,ref:n,type:O,className:R,disabled:p||c,"aria-disabled":p||c},C,{children:[c&&jsx(Spinner,{className:N}),a,v&&jsx(ChevronDownIcon,{className:D})]}))}));Button.displayName="Button";export{Button as default};
