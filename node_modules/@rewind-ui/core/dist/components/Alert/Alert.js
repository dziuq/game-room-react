'use client';
import{__rest}from"tslib";import{jsx,jsxs}from"react/jsx-runtime";import{useFade}from"../../animations/use-fade.hook.js";import{ErrorIcon}from"../../icons/Error.js";import{InfoIcon}from"../../icons/Info.js";import{QuestionIcon}from"../../icons/Question.js";import{SuccessIcon}from"../../icons/Success.js";import{WarningIcon}from"../../icons/Warning.js";import{useComponentTheme}from"../../theme/theme.context.js";import{useComponentVariant}from"../../theme/variant.context.js";import{usePropId}from"../../utils/usePropId.js";import{forwardRef,useState,useRef,useMemo}from"react";import{XMarkIcon}from"../../icons/XMark.js";import{twMerge}from"tailwind-merge";import{useMergeRefs}from"@floating-ui/react";import Spinner from"../Spinner/Spinner.js";const defaultProps={accent:"none",color:"dark",dismissable:!1,dismissableAnimation:!0,radius:"lg",shadow:"none",shadowColor:"none",size:"sm",tone:"light"},icons={error:jsx(ErrorIcon,{}),info:jsx(InfoIcon,{}),question:jsx(QuestionIcon,{}),success:jsx(SuccessIcon,{}),warning:jsx(WarningIcon,{}),loading:jsx(Spinner,{size:"xl"})},Alert=forwardRef(((s,e)=>{const o=useComponentVariant("Alert",s.variant),n=useComponentTheme("Alert"),r=Object.assign(Object.assign(Object.assign({},defaultProps),o),s),{accent:i,children:t,className:a="",color:c,dismissable:l,dismissableAnimation:m=!1,icon:d,iconType:p,radius:u,shadow:f,shadowColor:j,size:b,title:h,tone:g,variant:x}=r,I=__rest(r,["accent","children","className","color","dismissable","dismissableAnimation","icon","iconType","radius","shadow","shadowColor","size","title","tone","variant"]),[w,C]=useState(!0),N=useRef(null),A=useMergeRefs([e||null,N]);useFade({ref:N,visible:w,enabled:m});const M=useMemo((()=>twMerge(n.base({accent:i,className:a,color:c,radius:u,shadow:f,shadowColor:j,size:b,tone:g}))),[n,i,a,c,u,f,j,b,g]),O=usePropId(s.id);return jsxs("div",Object.assign({id:O,role:"alert",ref:A,className:M},I,{children:[(d||p)&&jsx("span",Object.assign({className:n.iconWrapper()},{children:p?icons[p]:d})),jsxs("div",Object.assign({className:n.infoWrapper({size:b})},{children:[h&&jsx("span",Object.assign({className:n.title({size:b,color:c,tone:g})},{children:h})),t&&jsx("span",Object.assign({className:n.text()},{children:t}))]})),l&&jsx("button",Object.assign({type:"button","aria-label":"Close alert",role:"button",title:"Close alert",className:n.iconWrapper(),onClick:()=>C(!1)},{children:jsx(XMarkIcon,{className:n.dismissIcon({size:b})})}))]}))}));Alert.displayName="Alert";export{Alert as default};
