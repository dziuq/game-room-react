'use client';
import{__rest}from"tslib";import{jsxs,Fragment,jsx}from"react/jsx-runtime";import{ModalGroup}from"./ModalGroup/ModalGroup.js";import{useModalGroupContext}from"./ModalGroup/ModalGroup.context.js";import{useMergeRefs,FloatingPortal}from"@floating-ui/react";import{useFocusTrap}from"../../hooks/use-focus-trap.hook.js";import{useKeypress}from"../../hooks/use-keypress.js";import{useComponentTheme}from"../../theme/theme.context.js";import{usePropId}from"../../utils/usePropId.js";import{forwardRef,useRef,useState,useMemo,useEffect}from"react";import Overlay from"../Overlay/Overlay.js";import{twMerge}from"tailwind-merge";const defaultProps={closeOnEscape:!0,color:"white",mode:"dialog",open:!1,overlayBlur:"sm",overlayCloseOnClick:!0,overlayColor:"dark",overlayOpacity:"50",position:"top",radius:"md",shadow:"base",size:"sm"},_Modal=forwardRef(((e,o)=>{const r=useComponentTheme("Modal"),s=Object.assign(Object.assign({},defaultProps),e),{children:t,className:a="",closeOnEscape:i,color:l,mode:n,onClose:u,open:c,overlayBlur:d,overlayCloseOnClick:m,overlayColor:p,overlayOpacity:f,position:y,radius:h,shadow:v,size:g}=s,M=__rest(s,["children","className","closeOnEscape","color","mode","onClose","open","overlayBlur","overlayCloseOnClick","overlayColor","overlayOpacity","position","radius","shadow","size"]),j=usePropId(e.id),O=useRef(null),[b,C]=useState(!1),x=useFocusTrap(b),w=useMergeRefs([O,x||null,o||null]),k=useRef(null),{activeModalId:E,registry:G,setRegistry:R}=useModalGroupContext(),P=useMemo((()=>{if("fullscreen"===n)return"0%";switch(y){case"top":case"bottom":return"0%";default:return"-50%"}}),[y,n]);useEffect((()=>{if(!R||!G||!O.current)return;const e=c?[...G,O.current]:G.filter((e=>e!==O.current));if(R(e),0!==e.length&&!c&&e.length<G.length){e[e.length-1].animate([{opacity:0,transform:"translateY(-50px)",visibility:"hidden"},{opacity:1,transform:"translateY(0%)",visibility:"visible"}],{duration:150}),C(!1)}}),[c]);const _=useMemo((()=>twMerge(r({className:a,color:l,mode:n,position:y,radius:h,shadow:v,size:g}))),[a,l,n,y,h,v,g,r]);useKeypress("Escape",i,u);return useEffect((()=>{const e=c?"ease-in-out":"ease-out",o=c?150:100,r=new KeyframeEffect(O.current,[{opacity:0,transform:"translateY(-100px)",visibility:"hidden"},{opacity:1,transform:`translateY(${P})`,visibility:"visible"}],{duration:o,fill:"both",easing:e});k.current=new Animation(r,document.timeline)}),[c,O]),useEffect((()=>{k.current&&(c?(k.current.play(),k.current.onfinish=()=>{C(!0)}):(k.current.reverse(),C(!1)))}),[c]),useEffect((()=>{k.current&&(E===j?setTimeout((()=>{C(!0)}),100):C(!1))}),[E]),jsxs(Fragment,{children:["fullscreen"!==n&&jsx(Overlay,{open:c,onClick:()=>{m&&u&&u()},blur:d,color:p,opacity:f,closeOnClick:m}),jsx(FloatingPortal,{children:jsx("div",Object.assign({className:"flex justify-center"},{children:jsx("div",Object.assign({id:j,role:"dialog","aria-modal":"true","aria-hidden":!c,style:{opacity:0,visibility:"hidden"},ref:w,className:_},M,{children:t}))}))})]})}));_Modal.displayName="Modal";const Modal=Object.assign(_Modal,{Group:ModalGroup});export{Modal as default};
