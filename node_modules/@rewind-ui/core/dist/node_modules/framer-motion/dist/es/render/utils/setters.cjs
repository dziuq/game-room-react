"use strict";var isNumericalString=require("../../utils/is-numerical-string.cjs"),isZeroValueString=require("../../utils/is-zero-value-string.cjs"),resolveValue=require("../../utils/resolve-value.cjs"),index$1=require("../../value/index.cjs"),index=require("../../value/types/complex/index.cjs"),animatableNone=require("../dom/value-types/animatable-none.cjs"),find=require("../dom/value-types/find.cjs"),resolveDynamicVariants=require("./resolve-dynamic-variants.cjs");function setMotionValue(e,i,r){e.hasValue(i)?e.getValue(i).set(r):e.addValue(i,index$1.motionValue(r))}function setTarget(e,i){const r=resolveDynamicVariants.resolveVariant(e,i);let{transitionEnd:n={},transition:t={},...a}=r?e.makeTargetAnimatable(r,!1):{};a={...a,...n};for(const i in a){setMotionValue(e,i,resolveValue.resolveFinalValueInKeyframes(a[i]))}}function checkTargetForNewValues(e,i,r){var n,t;const a=Object.keys(i).filter((i=>!e.hasValue(i))),s=a.length;if(s)for(let l=0;l<s;l++){const s=a[l],o=i[s];let u=null;Array.isArray(o)&&(u=o[0]),null===u&&(u=null!==(t=null!==(n=r[s])&&void 0!==n?n:e.readValue(s))&&void 0!==t?t:i[s]),null!=u&&("string"==typeof u&&(isNumericalString.isNumericalString(u)||isZeroValueString.isZeroValueString(u))?u=parseFloat(u):!find.findValueType(u)&&index.complex.test(o)&&(u=animatableNone.getAnimatableNone(s,o)),e.addValue(s,index$1.motionValue(u,{owner:e})),void 0===r[s]&&(r[s]=u),null!==u&&e.setBaseTarget(s,u))}}function getOriginFromTransition(e,i){if(!i)return;return(i[e]||i.default||i).from}function getOrigin(e,i,r){const n={};for(const t in e){const e=getOriginFromTransition(t,i);if(void 0!==e)n[t]=e;else{const e=r.getValue(t);e&&(n[t]=e.get())}}return n}exports.checkTargetForNewValues=checkTargetForNewValues,exports.getOrigin=getOrigin,exports.getOriginFromTransition=getOriginFromTransition,exports.setTarget=setTarget;
