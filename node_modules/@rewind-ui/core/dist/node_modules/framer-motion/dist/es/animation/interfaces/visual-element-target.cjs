"use strict";var transform=require("../../render/html/utils/transform.cjs"),dataId=require("../optimized-appear/data-id.cjs"),motionValue=require("./motion-value.cjs"),is=require("../../value/use-will-change/is.cjs"),setters=require("../../render/utils/setters.cjs"),frame=require("../../frameloop/frame.cjs");function shouldBlockAnimation({protectedKeys:e,needsAnimating:t},a){const n=e.hasOwnProperty(a)&&!0!==t[a];return t[a]=!1,n}function animateTarget(e,t,{delay:a=0,transitionOverride:n,type:i}={}){let{transition:r=e.getDefaultTransition(),transitionEnd:o,...s}=e.makeTargetAnimatable(t);const l=e.getValue("willChange");n&&(r=n);const m=[],d=i&&e.animationState&&e.animationState.getState()[i];for(const t in s){const n=e.getValue(t),i=s[t];if(!n||void 0===i||d&&shouldBlockAnimation(d,t))continue;const o={delay:a,elapsed:0,...r};if(window.HandoffAppearAnimations&&!n.hasAnimated){const a=e.getProps()[dataId.optimizedAppearDataAttribute];a&&(o.elapsed=window.HandoffAppearAnimations(a,t,n,frame.frame))}n.start(motionValue.animateMotionValue(t,n,i,e.shouldReduceMotion&&transform.transformProps.has(t)?{type:!1}:o));const u=n.animation;is.isWillChangeMotionValue(l)&&(l.add(t),u.then((()=>l.remove(t)))),m.push(u)}return o&&Promise.all(m).then((()=>{o&&setters.setTarget(e,o)})),m}exports.animateTarget=animateTarget;
