"use strict";var scrapeMotionValues=require("./utils/scrape-motion-values.cjs"),DOMVisualElement=require("../dom/DOMVisualElement.cjs"),buildAttrs=require("./utils/build-attrs.cjs"),camelToDash=require("../dom/utils/camel-to-dash.cjs"),camelCaseAttrs=require("./utils/camel-case-attrs.cjs"),transform=require("../html/utils/transform.cjs"),render=require("./utils/render.cjs"),defaults=require("../dom/value-types/defaults.cjs"),models=require("../../projection/geometry/models.cjs"),isSvgTag=require("./utils/is-svg-tag.cjs");class SVGVisualElement extends DOMVisualElement.DOMVisualElement{constructor(){super(...arguments),this.isSVGTag=!1}getBaseTargetFromProps(e,s){return e[s]}readValueFromInstance(e,s){if(transform.transformProps.has(s)){const e=defaults.getDefaultValueType(s);return e&&e.default||0}return s=camelCaseAttrs.camelCaseAttributes.has(s)?s:camelToDash.camelToDash(s),e.getAttribute(s)}measureInstanceViewportBox(){return models.createBox()}scrapeMotionValuesFromProps(e,s){return scrapeMotionValues.scrapeMotionValuesFromProps(e,s)}build(e,s,r,t){buildAttrs.buildSVGAttrs(e,s,r,this.isSVGTag,t.transformTemplate)}renderInstance(e,s,r,t){render.renderSVG(e,s,r,t)}mount(e){this.isSVGTag=isSvgTag.isSVGTag(e.tagName),super.mount(e)}}exports.SVGVisualElement=SVGVisualElement;
