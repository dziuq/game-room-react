"use strict";var PanSession=require("./PanSession.cjs"),addPointerEvent=require("../../events/add-pointer-event.cjs"),Feature=require("../../motion/features/Feature.cjs"),noop=require("../../utils/noop.cjs"),frame=require("../../frameloop/frame.cjs");const asyncHandler=e=>(n,s)=>{e&&frame.frame.update((()=>e(n,s)))};class PanGesture extends Feature.Feature{constructor(){super(...arguments),this.removePointerDownListener=noop.noop}onPointerDown(e){this.session=new PanSession.PanSession(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint()})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:n,onPan:s,onPanEnd:t}=this.node.getProps();return{onSessionStart:asyncHandler(e),onStart:asyncHandler(n),onMove:s,onEnd:(e,n)=>{delete this.session,t&&frame.frame.update((()=>t(e,n)))}}}mount(){this.removePointerDownListener=addPointerEvent.addPointerEvent(this.node.current,"pointerdown",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}exports.PanGesture=PanGesture;
