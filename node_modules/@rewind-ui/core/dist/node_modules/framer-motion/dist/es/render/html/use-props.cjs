"use strict";var React=require("react"),isForcedMotionValue=require("../../motion/utils/is-forced-motion-value.cjs"),isMotionValue=require("../../value/utils/is-motion-value.cjs"),buildStyles=require("./utils/build-styles.cjs"),createRenderState=require("./utils/create-render-state.cjs");function copyRawValuesOnly(e,t,s){for(const a in t)isMotionValue.isMotionValue(t[a])||isForcedMotionValue.isForcedMotionValue(a,s)||(e[a]=t[a])}function useInitialMotionValues({transformTemplate:e},t,s){return React.useMemo((()=>{const a=createRenderState.createHtmlRenderState();return buildStyles.buildHTMLStyles(a,t,{enableHardwareAcceleration:!s},e),Object.assign({},a.vars,a.style)}),[t])}function useStyle(e,t,s){const a={};return copyRawValuesOnly(a,e.style||{},e),Object.assign(a,useInitialMotionValues(e,t,s)),e.transformValues?e.transformValues(a):a}function useHTMLProps(e,t,s){const a={},r=useStyle(e,t,s);return e.drag&&!1!==e.dragListener&&(a.draggable=!1,r.userSelect=r.WebkitUserSelect=r.WebkitTouchCallout="none",r.touchAction=!0===e.drag?"none":"pan-"+("x"===e.drag?"y":"x")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(a.tabIndex=0),a.style=r,a}exports.copyRawValuesOnly=copyRawValuesOnly,exports.useHTMLProps=useHTMLProps;
