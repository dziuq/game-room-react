import*as React from"react";import{useContext,useRef,cloneElement,Children,isValidElement}from"react";import{useForceUpdate}from"../../utils/use-force-update.js";import{useIsMounted}from"../../utils/use-is-mounted.js";import{PresenceChild}from"./PresenceChild.js";import{LayoutGroupContext}from"../../context/LayoutGroupContext.js";import{useIsomorphicLayoutEffect}from"../../utils/use-isomorphic-effect.js";import{useUnmountEffect}from"../../utils/use-unmount-effect.js";import{invariant}from"../../utils/errors.js";const getChildKey=e=>e.key||"";function updateChildLookup(e,t){e.forEach((e=>{const n=getChildKey(e);t.set(n,e)}))}function onlyElements(e){const t=[];return Children.forEach(e,(e=>{isValidElement(e)&&t.push(e)})),t}const AnimatePresence=({children:e,custom:t,initial:n=!0,onExitComplete:r,exitBeforeEnter:o,presenceAffectsLayout:s=!0,mode:i="sync"})=>{invariant(!o,"Replace exitBeforeEnter with mode='wait'");const c=useContext(LayoutGroupContext).forceRender||useForceUpdate()[0],u=useIsMounted(),a=onlyElements(e);let l=a;const m=useRef(new Map).current,f=useRef(l),d=useRef(new Map).current,p=useRef(!0);if(useIsomorphicLayoutEffect((()=>{p.current=!1,updateChildLookup(a,d),f.current=l})),useUnmountEffect((()=>{p.current=!0,d.clear(),m.clear()})),p.current)return React.createElement(React.Fragment,null,l.map((e=>React.createElement(PresenceChild,{key:getChildKey(e),isPresent:!0,initial:!!n&&void 0,presenceAffectsLayout:s,mode:i},e))));l=[...l];const h=f.current.map(getChildKey),y=a.map(getChildKey),E=h.length;for(let e=0;e<E;e++){const t=h[e];-1!==y.indexOf(t)||m.has(t)||m.set(t,void 0)}return"wait"===i&&m.size&&(l=[]),m.forEach(((e,n)=>{if(-1!==y.indexOf(n))return;const o=d.get(n);if(!o)return;const p=h.indexOf(n);let E=e;if(!E){const e=()=>{d.delete(n),m.delete(n);const e=f.current.findIndex((e=>e.key===n));if(f.current.splice(e,1),!m.size){if(f.current=a,!1===u.current)return;c(),r&&r()}};E=React.createElement(PresenceChild,{key:getChildKey(o),isPresent:!1,onExitComplete:e,custom:t,presenceAffectsLayout:s,mode:i},o),m.set(n,E)}l.splice(p,0,E)})),l=l.map((e=>{const t=e.key;return m.has(t)?e:React.createElement(PresenceChild,{key:getChildKey(e),isPresent:!0,presenceAffectsLayout:s,mode:i},e)})),"production"!==process.env.NODE_ENV&&"wait"===i&&l.length>1&&console.warn('You\'re attempting to animate multiple children within AnimatePresence, but its mode is set to "wait". This will lead to odd visual behaviour.'),React.createElement(React.Fragment,null,m.size?l:l.map((e=>cloneElement(e))))};export{AnimatePresence};
