"use strict";var React=require("react"),isAnimationControls=require("../../animation/utils/is-animation-controls.cjs"),PresenceContext=require("../../context/PresenceContext.cjs"),resolveVariants=require("../../render/utils/resolve-variants.cjs"),useConstant=require("../../utils/use-constant.cjs"),resolveMotionValue=require("../../value/utils/resolve-motion-value.cjs"),index=require("../../context/MotionContext/index.cjs"),isControllingVariants=require("../../render/utils/is-controlling-variants.cjs");function makeState({scrapeMotionValuesFromProps:t,createRenderState:e,onMount:n},o,i,s){const r={latestValues:makeLatestValues(o,i,s,t),renderState:e()};return n&&(r.mount=t=>n(o,t,r)),r}const makeUseVisualState=t=>(e,n)=>{const o=React.useContext(index.MotionContext),i=React.useContext(PresenceContext.PresenceContext),s=()=>makeState(t,e,o,i);return n?s():useConstant.useConstant(s)};function makeLatestValues(t,e,n,o){const i={},s=o(t,{});for(const t in s)i[t]=resolveMotionValue.resolveMotionValue(s[t]);let{initial:r,animate:a}=t;const l=isControllingVariants.isControllingVariants(t),u=isControllingVariants.isVariantNode(t);e&&u&&!l&&!1!==t.inherit&&(void 0===r&&(r=e.initial),void 0===a&&(a=e.animate));let c=!!n&&!1===n.initial;c=c||!1===r;const m=c?a:r;if(m&&"boolean"!=typeof m&&!isAnimationControls.isAnimationControls(m)){(Array.isArray(m)?m:[m]).forEach((e=>{const n=resolveVariants.resolveVariantFromProps(t,e);if(!n)return;const{transitionEnd:o,transition:s,...r}=n;for(const t in r){let e=r[t];if(Array.isArray(e)){e=e[c?e.length-1:0]}null!==e&&(i[t]=e)}for(const t in o)i[t]=o[t]}))}return i}exports.makeUseVisualState=makeUseVisualState;
