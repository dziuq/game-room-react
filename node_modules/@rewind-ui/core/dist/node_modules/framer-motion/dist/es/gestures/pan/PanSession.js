import{extractEventInfo}from"../../events/event-info.js";import{secondsToMilliseconds,millisecondsToSeconds}from"../../utils/time-conversion.js";import{addPointerEvent}from"../../events/add-pointer-event.js";import{pipe}from"../../utils/pipe.js";import{distance2D}from"../../utils/distance.js";import{isPrimaryPointer}from"../../events/utils/is-primary-pointer.js";import{frame,cancelFrame,frameData}from"../../frameloop/frame.js";class PanSession{constructor(t,n,{transformPagePoint:e}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const t=getPanInfo(this.lastMoveEventInfo,this.history),n=null!==this.startEvent,e=distance2D(t.offset,{x:0,y:0})>=3;if(!n&&!e)return;const{point:i}=t,{timestamp:s}=frameData;this.history.push({...i,timestamp:s});const{onStart:o,onMove:r}=this.handlers;n||(o&&o(this.lastMoveEvent,t),this.startEvent=this.lastMoveEvent),r&&r(this.lastMoveEvent,t)},this.handlePointerMove=(t,n)=>{this.lastMoveEvent=t,this.lastMoveEventInfo=transformPoint(n,this.transformPagePoint),frame.update(this.updatePoint,!0)},this.handlePointerUp=(t,n)=>{if(this.end(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const{onEnd:e,onSessionEnd:i}=this.handlers,s=getPanInfo("pointercancel"===t.type?this.lastMoveEventInfo:transformPoint(n,this.transformPagePoint),this.history);this.startEvent&&e&&e(t,s),i&&i(t,s)},!isPrimaryPointer(t))return;this.handlers=n,this.transformPagePoint=e;const i=transformPoint(extractEventInfo(t),this.transformPagePoint),{point:s}=i,{timestamp:o}=frameData;this.history=[{...s,timestamp:o}];const{onSessionStart:r}=n;r&&r(t,getPanInfo(i,this.history)),this.removeListeners=pipe(addPointerEvent(window,"pointermove",this.handlePointerMove),addPointerEvent(window,"pointerup",this.handlePointerUp),addPointerEvent(window,"pointercancel",this.handlePointerUp))}updateHandlers(t){this.handlers=t}end(){this.removeListeners&&this.removeListeners(),cancelFrame(this.updatePoint)}}function transformPoint(t,n){return n?{point:n(t.point)}:t}function subtractPoint(t,n){return{x:t.x-n.x,y:t.y-n.y}}function getPanInfo({point:t},n){return{point:t,delta:subtractPoint(t,lastDevicePoint(n)),offset:subtractPoint(t,startDevicePoint(n)),velocity:getVelocity(n,.1)}}function startDevicePoint(t){return t[0]}function lastDevicePoint(t){return t[t.length-1]}function getVelocity(t,n){if(t.length<2)return{x:0,y:0};let e=t.length-1,i=null;const s=lastDevicePoint(t);for(;e>=0&&(i=t[e],!(s.timestamp-i.timestamp>secondsToMilliseconds(n)));)e--;if(!i)return{x:0,y:0};const o=millisecondsToSeconds(s.timestamp-i.timestamp);if(0===o)return{x:0,y:0};const r={x:(s.x-i.x)/o,y:(s.y-i.y)/o};return r.x===1/0&&(r.x=0),r.y===1/0&&(r.y=0),r}export{PanSession};
