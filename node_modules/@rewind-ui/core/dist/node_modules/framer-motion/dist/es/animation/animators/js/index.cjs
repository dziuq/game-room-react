"use strict";var keyframes=require("../../generators/keyframes.cjs"),index=require("../../generators/spring/index.cjs"),inertia=require("../../generators/inertia.cjs"),driverFrameloop=require("./driver-frameloop.cjs"),interpolate=require("../../../utils/interpolate.cjs"),clamp=require("../../../utils/clamp.cjs"),timeConversion=require("../../../utils/time-conversion.cjs"),calcDuration=require("../../generators/utils/calc-duration.cjs");const types={decay:inertia.inertia,inertia:inertia.inertia,tween:keyframes.keyframes,keyframes:keyframes.keyframes,spring:index.spring};function animateValue({autoplay:e=!0,delay:n=0,driver:r=driverFrameloop.frameloopDriver,keyframes:t,type:i="keyframes",repeat:l=0,repeatDelay:a=0,repeatType:o="loop",onPlay:s,onStop:u,onComplete:c,onUpdate:m,...d}){let p,f,y=1,v=!1;const k=()=>{f=new Promise((e=>{p=e}))};let h;k();const g=types[i]||keyframes.keyframes;let D;g!==keyframes.keyframes&&"number"!=typeof t[0]&&(D=interpolate.interpolate([0,100],t,{clamp:!1}),t=[0,100]);const j=g({...d,keyframes:t});let q;"mirror"===o&&(q=g({...d,keyframes:[...t].reverse(),velocity:-(d.velocity||0)}));let M="idle",x=null,C=null,T=null;null===j.calculatedDuration&&l&&(j.calculatedDuration=calcDuration.calcGeneratorDuration(j));const{calculatedDuration:w}=j;let S=1/0,V=1/0;null!==w&&(S=w+a,V=S*(l+1)-a);let F=0;const G=e=>{if(null===C)return;y>0&&(C=Math.min(C,e)),y<0&&(C=Math.min(e-V/y,C)),F=null!==x?x:Math.round(e-C)*y;const r=F-n*(y>=0?1:-1),i=y>=0?r<0:r>V;F=Math.max(r,0),"finished"===M&&null===x&&(F=V);let s=F,u=j;if(l){const e=F/S;let n=Math.floor(e),r=e%1;!r&&e>=1&&(r=1),1===r&&n--,n=Math.min(n,l+1);const t=Boolean(n%2);t&&("reverse"===o?(r=1-r,a&&(r-=a/S)):"mirror"===o&&(u=q));let i=clamp.clamp(0,1,r);F>V&&(i="reverse"===o&&t?1:0),s=i*S}const c=i?{done:!1,value:t[0]}:u.next(s);D&&(c.value=D(c.value));let{done:d}=c;i||null===w||(d=y>=0?F>=V:F<=0);const p=null===x&&("finished"===M||"running"===M&&d);return m&&m(c.value),p&&B(),c},P=()=>{h&&h.stop(),h=void 0},b=()=>{M="idle",P(),p(),k(),C=T=null},B=()=>{M="finished",c&&c(),P(),p()},U=()=>{if(v)return;h||(h=r(G));const e=h.now();s&&s(),null!==x?C=e-x:C&&"finished"!==M||(C=e),"finished"===M&&k(),T=C,x=null,M="running",h.start()};e&&U();const z={then:(e,n)=>f.then(e,n),get time(){return timeConversion.millisecondsToSeconds(F)},set time(e){e=timeConversion.secondsToMilliseconds(e),F=e,null===x&&h&&0!==y?C=h.now()-e/y:x=e},get duration(){const e=null===j.calculatedDuration?calcDuration.calcGeneratorDuration(j):j.calculatedDuration;return timeConversion.millisecondsToSeconds(e)},get speed(){return y},set speed(e){e!==y&&h&&(y=e,z.time=timeConversion.millisecondsToSeconds(F))},get state(){return M},play:U,pause:()=>{M="paused",x=F},stop:()=>{v=!0,"idle"!==M&&(M="idle",u&&u(),b())},cancel:()=>{null!==T&&G(T),b()},complete:()=>{M="finished"},sample:e=>(C=0,G(e))};return z}exports.animateValue=animateValue;
