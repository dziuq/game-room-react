"use strict";var isKeyframesTarget=require("../../../animation/utils/is-keyframes-target.cjs"),errors=require("../../../utils/errors.cjs"),transform=require("../../html/utils/transform.cjs"),dimensions=require("../value-types/dimensions.cjs"),isBrowser=require("../../../utils/is-browser.cjs"),index=require("../../../value/types/numbers/index.cjs"),units=require("../../../value/types/numbers/units.cjs");const positionalKeys=new Set(["width","height","top","left","right","bottom","x","y","translateX","translateY"]),isPositionalKey=e=>positionalKeys.has(e),hasPositionalKey=e=>Object.keys(e).some(isPositionalKey),isNumOrPxType=e=>e===index.number||e===units.px,getPosFromMatrix=(e,t)=>parseFloat(e.split(", ")[t]),getTranslateFromMatrix=(e,t)=>(s,{transform:r})=>{if("none"===r||!r)return 0;const n=r.match(/^matrix3d\((.+)\)$/);if(n)return getPosFromMatrix(n[1],t);{const t=r.match(/^matrix\((.+)\)$/);return t?getPosFromMatrix(t[1],e):0}},transformKeys=new Set(["x","y","z"]),nonTranslationalTransformKeys=transform.transformPropOrder.filter((e=>!transformKeys.has(e)));function removeNonTranslationalTransform(e){const t=[];return nonTranslationalTransformKeys.forEach((s=>{const r=e.getValue(s);void 0!==r&&(t.push([s,r.get()]),r.set(s.startsWith("scale")?1:0))})),t.length&&e.render(),t}const positionalValues={width:({x:e},{paddingLeft:t="0",paddingRight:s="0"})=>e.max-e.min-parseFloat(t)-parseFloat(s),height:({y:e},{paddingTop:t="0",paddingBottom:s="0"})=>e.max-e.min-parseFloat(t)-parseFloat(s),top:(e,{top:t})=>parseFloat(t),left:(e,{left:t})=>parseFloat(t),bottom:({y:e},{top:t})=>parseFloat(t)+(e.max-e.min),right:({x:e},{left:t})=>parseFloat(t)+(e.max-e.min),x:getTranslateFromMatrix(4,13),y:getTranslateFromMatrix(5,14)};positionalValues.translateX=positionalValues.x,positionalValues.translateY=positionalValues.y;const convertChangedValueTypes=(e,t,s)=>{const r=t.measureViewportBox(),n=t.current,a=getComputedStyle(n),{display:o}=a,i={};"none"===o&&t.setStaticValue("display",e.display||"block"),s.forEach((e=>{i[e]=positionalValues[e](r,a)})),t.render();const l=t.measureViewportBox();return s.forEach((s=>{const r=t.getValue(s);r&&r.jump(i[s]),e[s]=positionalValues[s](l,a)})),e},checkAndConvertChangedValueTypes=(e,t,s={},r={})=>{t={...t},r={...r};const n=Object.keys(t).filter(isPositionalKey);let a=[],o=!1;const i=[];if(n.forEach((n=>{const l=e.getValue(n);if(!e.hasValue(n))return;let u=s[n],m=dimensions.findDimensionValueType(u);const p=t[n];let f;if(isKeyframesTarget.isKeyframesTarget(p)){const e=p.length,t=null===p[0]?1:0;u=p[t],m=dimensions.findDimensionValueType(u);for(let s=t;s<e&&null!==p[s];s++)f?errors.invariant(dimensions.findDimensionValueType(p[s])===f,"All keyframes must be of the same type"):(f=dimensions.findDimensionValueType(p[s]),errors.invariant(f===m||isNumOrPxType(m)&&isNumOrPxType(f),"Keyframes must be of the same dimension as the current value"))}else f=dimensions.findDimensionValueType(p);if(m!==f)if(isNumOrPxType(m)&&isNumOrPxType(f)){const e=l.get();"string"==typeof e&&l.set(parseFloat(e)),"string"==typeof p?t[n]=parseFloat(p):Array.isArray(p)&&f===units.px&&(t[n]=p.map(parseFloat))}else(null==m?void 0:m.transform)&&(null==f?void 0:f.transform)&&(0===u||0===p)?0===u?l.set(f.transform(u)):t[n]=m.transform(p):(o||(a=removeNonTranslationalTransform(e),o=!0),i.push(n),r[n]=void 0!==r[n]?r[n]:t[n],l.jump(p))})),i.length){const s=i.indexOf("height")>=0?window.pageYOffset:null,n=convertChangedValueTypes(t,e,i);return a.length&&a.forEach((([t,s])=>{e.getValue(t).set(s)})),e.render(),isBrowser.isBrowser&&null!==s&&window.scrollTo({top:s}),{target:n,transitionEnd:r}}return{target:t,transitionEnd:r}};function unitConversion(e,t,s,r){return hasPositionalKey(t)?checkAndConvertChangedValueTypes(e,t,s,r):{target:t,transitionEnd:r}}exports.positionalValues=positionalValues,exports.unitConversion=unitConversion;
