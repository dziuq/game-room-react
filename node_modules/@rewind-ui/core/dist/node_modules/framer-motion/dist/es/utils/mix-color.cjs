"use strict";var mix=require("./mix.cjs"),errors=require("./errors.cjs"),hslaToRgba=require("./hsla-to-rgba.cjs"),hex=require("../value/types/color/hex.cjs"),rgba=require("../value/types/color/rgba.cjs"),hsla=require("../value/types/color/hsla.cjs");const mixLinearColor=(r,e,o)=>{const a=r*r;return Math.sqrt(Math.max(0,o*(e*e-a)+a))},colorTypes=[hex.hex,rgba.rgba,hsla.hsla],getColorType=r=>colorTypes.find((e=>e.test(r)));function asRGBA(r){const e=(o=r,colorTypes.find((r=>r.test(o))));var o;errors.invariant(Boolean(e),`'${r}' is not an animatable color. Use the equivalent color code instead.`);let a=e.parse(r);return e===hsla.hsla&&(a=hslaToRgba.hslaToRgba(a)),a}const mixColor=(r,e)=>{const o=asRGBA(r),a=asRGBA(e),s={...o};return r=>(s.red=mixLinearColor(o.red,a.red,r),s.green=mixLinearColor(o.green,a.green,r),s.blue=mixLinearColor(o.blue,a.blue,r),s.alpha=mix.mix(o.alpha,a.alpha,r),rgba.rgba.transform(s))};exports.mixColor=mixColor,exports.mixLinearColor=mixLinearColor;
