import{mix}from"../../utils/mix.js";import{hasTransform}from"../utils/has-transform.js";function scalePoint(t,a,s){return s+a*(t-s)}function applyPointDelta(t,a,s,n,o){return void 0!==o&&(t=scalePoint(t,o,n)),scalePoint(t,s,n)+a}function applyAxisDelta(t,a=0,s=1,n,o){t.min=applyPointDelta(t.min,a,s,n,o),t.max=applyPointDelta(t.max,a,s,n,o)}function applyBoxDelta(t,{x:a,y:s}){applyAxisDelta(t.x,a.translate,a.scale,a.originPoint),applyAxisDelta(t.y,s.translate,s.scale,s.originPoint)}function applyTreeDeltas(t,a,s,n=!1){const o=s.length;if(!o)return;let l,e;a.x=a.y=1;for(let i=0;i<o;i++){l=s[i],e=l.projectionDelta;const o=l.instance;o&&o.style&&"contents"===o.style.display||(n&&l.options.layoutScroll&&l.scroll&&l!==l.root&&transformBox(t,{x:-l.scroll.offset.x,y:-l.scroll.offset.y}),e&&(a.x*=e.x.scale,a.y*=e.y.scale,applyBoxDelta(t,e)),n&&hasTransform(l.latestValues)&&transformBox(t,l.latestValues))}a.x=snapToDefault(a.x),a.y=snapToDefault(a.y)}function snapToDefault(t){return Number.isInteger(t)||t>1.0000000000001||t<.999999999999?t:1}function translateAxis(t,a){t.min=t.min+a,t.max=t.max+a}function transformAxis(t,a,[s,n,o]){const l=void 0!==a[o]?a[o]:.5,e=mix(t.min,t.max,l);applyAxisDelta(t,a[s],a[n],e,a.scale)}const xKeys=["x","scaleX","originX"],yKeys=["y","scaleY","originY"];function transformBox(t,a){transformAxis(t.x,a,xKeys),transformAxis(t.y,a,yKeys)}export{applyAxisDelta,applyBoxDelta,applyPointDelta,applyTreeDeltas,scalePoint,transformAxis,transformBox,translateAxis};
