"use strict";var resolveDynamicVariants=require("../../render/utils/resolve-dynamic-variants.cjs"),visualElementTarget=require("./visual-element-target.cjs");function animateVariant(e,r,t={}){const n=resolveDynamicVariants.resolveVariant(e,r,t.custom);let{transition:i=e.getDefaultTransition()||{}}=n||{};t.transitionOverride&&(i=t.transitionOverride);const a=n?()=>Promise.all(visualElementTarget.animateTarget(e,n,t)):()=>Promise.resolve(),s=e.variantChildren&&e.variantChildren.size?(n=0)=>{const{delayChildren:a=0,staggerChildren:s,staggerDirection:o}=i;return animateChildren(e,r,a+n,s,o,t)}:()=>Promise.resolve(),{when:o}=i;if(o){const[e,r]="beforeChildren"===o?[a,s]:[s,a];return e().then((()=>r()))}return Promise.all([a(),s(t.delay)])}function animateChildren(e,r,t=0,n=0,i=1,a){const s=[],o=(e.variantChildren.size-1)*n,l=1===i?(e=0)=>e*n:(e=0)=>o-e*n;return Array.from(e.variantChildren).sort(sortByTreeOrder).forEach(((e,n)=>{e.notify("AnimationStart",r),s.push(animateVariant(e,r,{...a,delay:t+l(n)}).then((()=>e.notify("AnimationComplete",r))))})),Promise.all(s)}function sortByTreeOrder(e,r){return e.sortNodePosition(r)}exports.animateVariant=animateVariant,exports.sortByTreeOrder=sortByTreeOrder;
