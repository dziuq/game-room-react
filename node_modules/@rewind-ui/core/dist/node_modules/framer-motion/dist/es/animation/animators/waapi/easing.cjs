"use strict";var isBezierDefinition=require("../../../easing/utils/is-bezier-definition.cjs");function isWaapiSupportedEasing(i){return Boolean(!i||"string"==typeof i&&supportedWaapiEasing[i]||isBezierDefinition.isBezierDefinition(i)||Array.isArray(i)&&i.every(isWaapiSupportedEasing))}const cubicBezierAsString=([i,e,a,s])=>`cubic-bezier(${i}, ${e}, ${a}, ${s})`,supportedWaapiEasing={linear:"linear",ease:"ease",easeIn:"ease-in",easeOut:"ease-out",easeInOut:"ease-in-out",circIn:cubicBezierAsString([0,.65,.55,1]),circOut:cubicBezierAsString([.55,0,1,.45]),backIn:cubicBezierAsString([.31,.01,.66,-.59]),backOut:cubicBezierAsString([.33,1.53,.69,.99])};function mapEasingToNativeEasing(i){if(i)return isBezierDefinition.isBezierDefinition(i)?cubicBezierAsString(i):Array.isArray(i)?i.map(mapEasingToNativeEasing):supportedWaapiEasing[i]}exports.cubicBezierAsString=cubicBezierAsString,exports.isWaapiSupportedEasing=isWaapiSupportedEasing,exports.mapEasingToNativeEasing=mapEasingToNativeEasing,exports.supportedWaapiEasing=supportedWaapiEasing;
