import{animateStyle}from"./index.js";import{isWaapiSupportedEasing}from"./easing.js";import{getFinalKeyframe}from"./utils/get-final-keyframe.js";import{animateValue}from"../js/index.js";import{millisecondsToSeconds,secondsToMilliseconds}from"../../../utils/time-conversion.js";import{memo}from"../../../utils/memo.js";import{noop}from"../../../utils/noop.js";import{frame,cancelFrame}from"../../../frameloop/frame.js";const supportsWaapi=memo((()=>Object.hasOwnProperty.call(Element.prototype,"animate"))),acceleratedValues=new Set(["opacity","clipPath","filter","transform","backgroundColor"]),sampleDelta=10,maxDuration=2e4,requiresPregeneratedKeyframes=(e,a)=>"spring"===a.type||"backgroundColor"===e||!isWaapiSupportedEasing(a.ease);function createAcceleratedAnimation(e,a,{onUpdate:t,onComplete:r,...i}){if(!(supportsWaapi()&&acceleratedValues.has(a)&&!i.repeatDelay&&"mirror"!==i.repeatType&&0!==i.damping&&"inertia"!==i.type))return!1;let o,n,s=!1;const l=()=>{n=new Promise((e=>{o=e}))};l();let{keyframes:m,duration:p=300,ease:c,times:u}=i;if(requiresPregeneratedKeyframes(a,i)){const e=animateValue({...i,repeat:0,delay:0});let a={done:!1,value:m[0]};const t=[];let r=0;for(;!a.done&&r<2e4;)a=e.sample(r),t.push(a.value),r+=10;u=void 0,m=t,p=r-10,c="linear"}const d=animateStyle(e.owner.current,a,m,{...i,duration:p,ease:c,times:u}),f=()=>d.cancel(),y=()=>{frame.update(f),o(),l()};d.onfinish=()=>{e.set(getFinalKeyframe(m,i)),r&&r(),y()};return{then:(e,a)=>n.then(e,a),attachTimeline:e=>(d.timeline=e,d.onfinish=null,noop),get time(){return millisecondsToSeconds(d.currentTime||0)},set time(e){d.currentTime=secondsToMilliseconds(e)},get speed(){return d.playbackRate},set speed(e){d.playbackRate=e},get duration(){return millisecondsToSeconds(p)},play:()=>{s||(d.play(),cancelFrame(f))},pause:()=>d.pause(),stop:()=>{if(s=!0,"idle"===d.playState)return;const{currentTime:a}=d;if(a){const t=animateValue({...i,autoplay:!1});e.setWithVelocity(t.sample(a-10).value,t.sample(a).value,10)}y()},complete:()=>d.finish(),cancel:y}}export{createAcceleratedAnimation};
