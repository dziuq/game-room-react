"use strict";var errors=require("../../../utils/errors.cjs"),clamp=require("../../../utils/clamp.cjs"),timeConversion=require("../../../utils/time-conversion.cjs");const safeMin=.001,minDuration=.01,maxDuration=10,minDamping=.05,maxDamping=1;function findSpring({duration:n=800,bounce:r=.25,velocity:t=0,mass:o=1}){let e,i;errors.warning(n<=timeConversion.secondsToMilliseconds(10),"Spring duration must be 10 seconds or less");let s=1-r;s=clamp.clamp(.05,1,s),n=clamp.clamp(.01,10,timeConversion.millisecondsToSeconds(n)),s<1?(e=r=>{const o=r*s,e=o*n;return.001-(o-t)/calcAngularFreq(r,s)*Math.exp(-e)},i=r=>{const o=r*s*n,i=o*t+t,a=Math.pow(s,2)*Math.pow(r,2)*n,c=Math.exp(-o),p=calcAngularFreq(Math.pow(r,2),s);return(.001-e(r)>0?-1:1)*((i-a)*c)/p}):(e=r=>Math.exp(-r*n)*((r-t)*n+1)-.001,i=r=>Math.exp(-r*n)*(n*n*(t-r)));const a=approximateRoot(e,i,5/n);if(n=timeConversion.secondsToMilliseconds(n),isNaN(a))return{stiffness:100,damping:10,duration:n};{const r=Math.pow(a,2)*o;return{stiffness:r,damping:2*s*Math.sqrt(o*r),duration:n}}}const rootIterations=12;function approximateRoot(n,r,t){let o=t;for(let t=1;t<rootIterations;t++)o-=n(o)/r(o);return o}function calcAngularFreq(n,r){return n*Math.sqrt(1-r*r)}exports.calcAngularFreq=calcAngularFreq,exports.findSpring=findSpring,exports.maxDamping=1,exports.maxDuration=10,exports.minDamping=.05,exports.minDuration=.01;
