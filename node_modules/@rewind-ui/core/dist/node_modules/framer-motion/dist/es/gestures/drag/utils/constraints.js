import{progress}from"../../../utils/progress.js";import{calcLength}from"../../../projection/geometry/delta-calc.js";import{clamp}from"../../../utils/clamp.js";import{mix}from"../../../utils/mix.js";function applyConstraints(i,{min:t,max:n},s){return void 0!==t&&i<t?i=s?mix(t,i,s.min):Math.max(i,t):void 0!==n&&i>n&&(i=s?mix(n,i,s.max):Math.min(i,n)),i}function calcRelativeAxisConstraints(i,t,n){return{min:void 0!==t?i.min+t:void 0,max:void 0!==n?i.max+n-(i.max-i.min):void 0}}function calcRelativeConstraints(i,{top:t,left:n,bottom:s,right:a}){return{x:calcRelativeAxisConstraints(i.x,n,a),y:calcRelativeAxisConstraints(i.y,t,s)}}function calcViewportAxisConstraints(i,t){let n=t.min-i.min,s=t.max-i.max;return t.max-t.min<i.max-i.min&&([n,s]=[s,n]),{min:n,max:s}}function calcViewportConstraints(i,t){return{x:calcViewportAxisConstraints(i.x,t.x),y:calcViewportAxisConstraints(i.y,t.y)}}function calcOrigin(i,t){let n=.5;const s=calcLength(i),a=calcLength(t);return a>s?n=progress(t.min,t.max-s,i.min):s>a&&(n=progress(i.min,i.max-a,t.min)),clamp(0,1,n)}function rebaseAxisConstraints(i,t){const n={};return void 0!==t.min&&(n.min=t.min-i.min),void 0!==t.max&&(n.max=t.max-i.min),n}const defaultElastic=.35;function resolveDragElastic(i=.35){return!1===i?i=0:!0===i&&(i=.35),{x:resolveAxisElastic(i,"left","right"),y:resolveAxisElastic(i,"top","bottom")}}function resolveAxisElastic(i,t,n){return{min:resolvePointElastic(i,t),max:resolvePointElastic(i,n)}}function resolvePointElastic(i,t){return"number"==typeof i?i:i[t]||0}export{applyConstraints,calcOrigin,calcRelativeAxisConstraints,calcRelativeConstraints,calcViewportAxisConstraints,calcViewportConstraints,defaultElastic,rebaseAxisConstraints,resolveAxisElastic,resolveDragElastic,resolvePointElastic};
