import*as React from"react";import{forwardRef,useContext}from"react";import{MotionConfigContext}from"../context/MotionConfigContext.js";import{MotionContext}from"../context/MotionContext/index.js";import{useVisualElement}from"./utils/use-visual-element.js";import{useMotionRef}from"./utils/use-motion-ref.js";import{useCreateMotionContext}from"../context/MotionContext/create.js";import{loadFeatures}from"./features/load-features.js";import{isBrowser}from"../utils/is-browser.js";import{LayoutGroupContext}from"../context/LayoutGroupContext.js";import{LazyContext}from"../context/LazyContext.js";import{SwitchLayoutGroupContext}from"../context/SwitchLayoutGroupContext.js";import{motionComponentSymbol}from"./utils/symbol.js";function createMotionComponent({preloadedFeatures:t,createVisualElement:o,useRender:e,useVisualState:n,Component:r}){t&&loadFeatures(t);const i=forwardRef((function(i,s){let u;const a={...useContext(MotionConfigContext),...i,layoutId:useLayoutId(i)},{isStatic:m}=a,l=useCreateMotionContext(i),C=n(i,m);if(!m&&isBrowser){l.visualElement=useVisualElement(r,C,a,o);const e=useContext(SwitchLayoutGroupContext),n=useContext(LazyContext).strict;l.visualElement&&(u=l.visualElement.loadFeatures(a,n,t,e))}return React.createElement(MotionContext.Provider,{value:l},u&&l.visualElement?React.createElement(u,{visualElement:l.visualElement,...a}):null,e(r,i,useMotionRef(C,l.visualElement,s),C,m,l.visualElement))}));return i[motionComponentSymbol]=r,i}function useLayoutId({layoutId:t}){const o=useContext(LayoutGroupContext).id;return o&&void 0!==t?o+"-"+t:t}export{createMotionComponent};
