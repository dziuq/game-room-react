import{PanSession}from"./PanSession.js";import{addPointerEvent}from"../../events/add-pointer-event.js";import{Feature}from"../../motion/features/Feature.js";import{noop}from"../../utils/noop.js";import{frame}from"../../frameloop/frame.js";const asyncHandler=e=>(n,o)=>{e&&frame.update((()=>e(n,o)))};class PanGesture extends Feature{constructor(){super(...arguments),this.removePointerDownListener=noop}onPointerDown(e){this.session=new PanSession(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint()})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:n,onPan:o,onPanEnd:t}=this.node.getProps();return{onSessionStart:asyncHandler(e),onStart:asyncHandler(n),onMove:o,onEnd:(e,n)=>{delete this.session,t&&frame.update((()=>t(e,n)))}}}mount(){this.removePointerDownListener=addPointerEvent(this.node.current,"pointerdown",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}export{PanGesture};
