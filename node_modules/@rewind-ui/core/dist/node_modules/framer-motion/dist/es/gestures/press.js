import{extractEventInfo}from"../events/event-info.js";import{addDomEvent}from"../events/add-dom-event.js";import{addPointerEvent}from"../events/add-pointer-event.js";import{Feature}from"../motion/features/Feature.js";import{pipe}from"../utils/pipe.js";import{isDragActive}from"./drag/utils/lock.js";import{isNodeOrChild}from"./utils/is-node-or-child.js";import{noop}from"../utils/noop.js";import{frame}from"../frameloop/frame.js";function fireSyntheticPointerEvent(e,t){if(!t)return;const s=new PointerEvent("pointer"+e);t(s,extractEventInfo(s))}class PressGesture extends Feature{constructor(){super(...arguments),this.removeStartListeners=noop,this.removeEndListeners=noop,this.removeAccessibleListeners=noop,this.startPointerPress=(e,t)=>{if(this.removeEndListeners(),this.isPressing)return;const s=this.node.getProps(),n=addPointerEvent(window,"pointerup",((e,t)=>{if(!this.checkPressEnd())return;const{onTap:s,onTapCancel:n}=this.node.getProps();frame.update((()=>{isNodeOrChild(this.node.current,e.target)?s&&s(e,t):n&&n(e,t)}))}),{passive:!(s.onTap||s.onPointerUp)}),r=addPointerEvent(window,"pointercancel",((e,t)=>this.cancelPress(e,t)),{passive:!(s.onTapCancel||s.onPointerCancel)});this.removeEndListeners=pipe(n,r),this.startPress(e,t)},this.startAccessiblePress=()=>{const e=addDomEvent(this.node.current,"keydown",(e=>{if("Enter"!==e.key||this.isPressing)return;this.removeEndListeners(),this.removeEndListeners=addDomEvent(this.node.current,"keyup",(e=>{"Enter"===e.key&&this.checkPressEnd()&&fireSyntheticPointerEvent("up",((e,t)=>{const{onTap:s}=this.node.getProps();s&&frame.update((()=>s(e,t)))}))})),fireSyntheticPointerEvent("down",((e,t)=>{this.startPress(e,t)}))})),t=addDomEvent(this.node.current,"blur",(()=>{this.isPressing&&fireSyntheticPointerEvent("cancel",((e,t)=>this.cancelPress(e,t)))}));this.removeAccessibleListeners=pipe(e,t)}}startPress(e,t){this.isPressing=!0;const{onTapStart:s,whileTap:n}=this.node.getProps();n&&this.node.animationState&&this.node.animationState.setActive("whileTap",!0),s&&frame.update((()=>s(e,t)))}checkPressEnd(){this.removeEndListeners(),this.isPressing=!1;return this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive("whileTap",!1),!isDragActive()}cancelPress(e,t){if(!this.checkPressEnd())return;const{onTapCancel:s}=this.node.getProps();s&&frame.update((()=>s(e,t)))}mount(){const e=this.node.getProps(),t=addPointerEvent(this.node.current,"pointerdown",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),s=addDomEvent(this.node.current,"focus",this.startAccessiblePress);this.removeStartListeners=pipe(t,s)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}export{PressGesture};
