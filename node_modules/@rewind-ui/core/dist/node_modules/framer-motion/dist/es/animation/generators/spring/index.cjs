"use strict";var timeConversion=require("../../../utils/time-conversion.cjs"),velocity=require("../utils/velocity.cjs"),find=require("./find.cjs");const durationKeys=["duration","bounce"],physicsKeys=["stiffness","damping","mass"];function isSpringType(e,s){return s.some((s=>void 0!==e[s]))}function getSpringOptions(e){let s={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!isSpringType(e,physicsKeys)&&isSpringType(e,durationKeys)){const n=find.findSpring(e);s={...s,...n,velocity:0,mass:1},s.isResolvedFromDuration=!0}return s}function spring({keyframes:e,restDelta:s,restSpeed:n,...t}){const i=e[0],o=e[e.length-1],r={done:!1,value:i},{stiffness:a,damping:c,mass:l,velocity:u,duration:d,isResolvedFromDuration:p}=getSpringOptions(t),f=u?-timeConversion.millisecondsToSeconds(u):0,h=c/(2*Math.sqrt(a*l)),m=o-i,v=timeConversion.millisecondsToSeconds(Math.sqrt(a/l)),y=Math.abs(m)<5;let g;if(n||(n=y?.01:2),s||(s=y?.005:.5),h<1){const e=find.calcAngularFreq(v,h);g=s=>{const n=Math.exp(-h*v*s);return o-n*((f+h*v*m)/e*Math.sin(e*s)+m*Math.cos(e*s))}}else if(1===h)g=e=>o-Math.exp(-v*e)*(m+(f+v*m)*e);else{const e=v*Math.sqrt(h*h-1);g=s=>{const n=Math.exp(-h*v*s),t=Math.min(e*s,300);return o-n*((f+h*v*m)*Math.sinh(t)+e*m*Math.cosh(t))/e}}return{calculatedDuration:p&&d||null,next:e=>{const t=g(e);if(p)r.done=e>=d;else{let i=f;0!==e&&(i=h<1?velocity.calcGeneratorVelocity(g,e,t):0);const a=Math.abs(i)<=n,c=Math.abs(o-t)<=s;r.done=a&&c}return r.value=r.done?o:t,r}}}exports.spring=spring;
